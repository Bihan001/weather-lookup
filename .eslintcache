[{"D:\\Codes\\React\\weather-typescript\\src\\index.js":"1","D:\\Codes\\React\\weather-typescript\\src\\reportWebVitals.js":"2","D:\\Codes\\React\\weather-typescript\\src\\api\\fetchWeather.js":"3","D:\\Codes\\React\\weather-typescript\\src\\components\\Map.jsx":"4","D:\\Codes\\React\\weather-typescript\\src\\components\\Search.jsx":"5","D:\\Codes\\React\\weather-typescript\\src\\components\\ThemeSelect.jsx":"6","D:\\Codes\\React\\weather-typescript\\src\\App.jsx":"7","D:\\Codes\\React\\weather-typescript\\src\\serviceWorkerRegistration.js":"8"},{"size":378,"mtime":1611480407102,"results":"9","hashOfConfig":"10"},{"size":377,"mtime":1611480384948,"results":"11","hashOfConfig":"10"},{"size":842,"mtime":1611416204072,"results":"12","hashOfConfig":"10"},{"size":2008,"mtime":1611425330133,"results":"13","hashOfConfig":"10"},{"size":1384,"mtime":1611417733433,"results":"14","hashOfConfig":"10"},{"size":836,"mtime":1611423068961,"results":"15","hashOfConfig":"10"},{"size":3358,"mtime":1611474996848,"results":"16","hashOfConfig":"10"},{"size":5201,"mtime":1611480385109,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f6rtv1",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Codes\\React\\weather-typescript\\src\\index.js",[],"D:\\Codes\\React\\weather-typescript\\src\\reportWebVitals.js",[],["37","38"],"D:\\Codes\\React\\weather-typescript\\src\\api\\fetchWeather.js",["39"],"import axios from 'axios';\r\n\r\nconst weatherAPIKey = 'e4e40b8ea4e6a131dddcdadd76d89036';\r\n\r\nconst fetchWeather = async (type, data) => {\r\n  try {\r\n    switch (type) {\r\n      case 'COORDS': {\r\n        const { lat, lan } = data;\r\n        let res = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lan}&appid=${weatherAPIKey}&units=metric`\r\n        );\r\n        return res.data;\r\n      }\r\n      case 'CITY_NAME': {\r\n        const { city_name } = data;\r\n        let res = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city_name}&appid=${weatherAPIKey}&units=metric`\r\n        );\r\n        return res.data;\r\n      }\r\n      default:\r\n        throw { message: 'This is an error' };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default fetchWeather;\r\n","D:\\Codes\\React\\weather-typescript\\src\\components\\Map.jsx",["40","41"],"import React, { useEffect, useState } from 'react';\r\nimport ReactMapGL, { Marker, NavigationControl, LinearInterpolator } from 'react-map-gl';\r\nimport fetchWeather from '../api/fetchWeather';\r\n\r\nconst mapAPIKey = 'pk.eyJ1IjoiYmloYW5jIiwiYSI6ImNrazlmamhsMzAydDMyd254aWZ2dTYwaWIifQ.LqqynIf2WmW-2BFGZrnMnw';\r\n\r\nconst Map = (props) => {\r\n  const { viewport, marker, setViewport, setMarker, setCurrentWeather, theme } = props;\r\n\r\n  const [transitionDuration, setTransitionDuration] = useState(200);\r\n\r\n  const handleMarkerPosition = (e) => {\r\n    setMarker({ lat: e.lngLat[1], lan: e.lngLat[0] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer = setTimeout(() => {\r\n      fetchWeather('COORDS', { lat: marker.lat, lan: marker.lan }).then((res) => setCurrentWeather(res));\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [marker.lat, marker.lan]);\r\n\r\n  return (\r\n    <ReactMapGL\r\n      getCursor={(e) => {\r\n        if (e.isDragging) setTransitionDuration(0);\r\n        else setTransitionDuration(200);\r\n      }}\r\n      {...viewport}\r\n      transitionDuration={transitionDuration}\r\n      transitionInterpolator={new LinearInterpolator()}\r\n      mapStyle={`mapbox://styles/mapbox/${theme}`}\r\n      mapboxApiAccessToken={mapAPIKey}\r\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n      onClick={(e) => {\r\n        handleMarkerPosition(e);\r\n        setViewport((v) => {\r\n          return { ...v, latitude: e.lngLat[1], longitude: e.lngLat[0] };\r\n        });\r\n      }}>\r\n      <Marker\r\n        draggable\r\n        onDragEnd={(e) => handleMarkerPosition(e)}\r\n        latitude={marker.lat}\r\n        longitude={marker.lan}\r\n        offsetLeft={-25}\r\n        offsetTop={-50}>\r\n        <div>\r\n          <img\r\n            src={require('../Assets/pin.svg').default}\r\n            style={{ width: 50, height: 50, transformOrigin: 'center' }}\r\n            alt='marker'\r\n            draggable={false}\r\n          />\r\n        </div>\r\n      </Marker>\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","D:\\Codes\\React\\weather-typescript\\src\\components\\Search.jsx",[],"D:\\Codes\\React\\weather-typescript\\src\\components\\ThemeSelect.jsx",[],"D:\\Codes\\React\\weather-typescript\\src\\App.jsx",["42"],"D:\\Codes\\React\\weather-typescript\\src\\serviceWorkerRegistration.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":23,"column":9,"nodeType":"49","messageId":"50","endLine":23,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":2,"column":30,"nodeType":"53","messageId":"54","endLine":2,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":21,"column":6,"nodeType":"57","endLine":21,"endColumn":30,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":49,"column":6,"nodeType":"57","endLine":49,"endColumn":8,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'NavigationControl' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentWeather'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'getMyLocation'. Either include it or remove the dependency array.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [marker.lat, marker.lan, setCurrentWeather]",{"range":"69","text":"70"},"Update the dependencies array to be: [getMyLocation]",{"range":"71","text":"72"},[824,848],"[marker.lat, marker.lan, setCurrentWeather]",[1211,1213],"[getMyLocation]"]