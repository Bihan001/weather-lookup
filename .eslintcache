[{"D:\\Codes\\React\\weather-neo-pwa\\src\\index.js":"1","D:\\Codes\\React\\weather-neo-pwa\\src\\reportWebVitals.js":"2","D:\\Codes\\React\\weather-neo-pwa\\src\\serviceWorkerRegistration.js":"3","D:\\Codes\\React\\weather-neo-pwa\\src\\App.jsx":"4","D:\\Codes\\React\\weather-neo-pwa\\src\\components\\Map.jsx":"5","D:\\Codes\\React\\weather-neo-pwa\\src\\components\\ThemeSelect.jsx":"6","D:\\Codes\\React\\weather-neo-pwa\\src\\components\\Search.jsx":"7","D:\\Codes\\React\\weather-neo-pwa\\src\\api\\fetchWeather.js":"8"},{"size":378,"mtime":1611480407102,"results":"9","hashOfConfig":"10"},{"size":377,"mtime":1611480384948,"results":"11","hashOfConfig":"10"},{"size":5201,"mtime":1611480385109,"results":"12","hashOfConfig":"10"},{"size":3358,"mtime":1611474996848,"results":"13","hashOfConfig":"10"},{"size":1989,"mtime":1611559625069,"results":"14","hashOfConfig":"10"},{"size":836,"mtime":1611423068961,"results":"15","hashOfConfig":"10"},{"size":1384,"mtime":1611417733433,"results":"16","hashOfConfig":"10"},{"size":842,"mtime":1611416204072,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"29f6rg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"D:\\Codes\\React\\weather-neo-pwa\\src\\index.js",[],["37","38"],"D:\\Codes\\React\\weather-neo-pwa\\src\\reportWebVitals.js",[],"D:\\Codes\\React\\weather-neo-pwa\\src\\serviceWorkerRegistration.js",[],"D:\\Codes\\React\\weather-neo-pwa\\src\\App.jsx",["39"],"import { Fragment, useEffect, useState } from 'react';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport Map from './components/Map';\nimport './css/styles.css';\nimport Search from './components/Search';\nimport ThemeSelect from './components/ThemeSelect';\n\nlet mapWidth = 1000;\nlet mapHeight = 600;\nif (window.innerWidth <= 768) {\n  mapWidth = 500;\n  mapHeight = 550;\n}\n\nconst App = () => {\n  const [theme, setTheme] = useState('streets-v11');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [viewport, setViewport] = useState({\n    width: mapWidth,\n    height: mapHeight,\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8,\n  });\n\n  const [marker, setMarker] = useState({\n    lat: 0,\n    lan: 0,\n  });\n\n  const getCurrentLocation = (cb) => {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => cb(pos),\n      (err) => console.log(err)\n    );\n  };\n\n  const getMyLocation = () => {\n    getCurrentLocation((pos) => {\n      setViewport((v) => {\n        return { ...v, latitude: pos.coords.latitude, longitude: pos.coords.longitude };\n      });\n      setMarker({ lat: pos.coords.latitude, lan: pos.coords.longitude });\n    });\n  };\n\n  useEffect(() => {\n    getMyLocation();\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='container'>\n        <div className='header'>\n          <h1>Weather Lookup</h1>\n        </div>\n        <div className='content'>\n          <Search\n            getMyLocation={getMyLocation}\n            setCurrentWeather={setCurrentWeather}\n            setMarker={setMarker}\n            setViewport={setViewport}\n          />\n          <div className='card bordered'>\n            <div className='title'>Weather Details</div>\n            <p>\n              {!currentWeather ? (\n                <p>Search any city or select a location from the map to get its currrent weather.</p>\n              ) : (\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                  <p>\n                    Place: {currentWeather.name || 'Not available'}\n                    <br />\n                    Country: {currentWeather.sys.country || 'Not available'}\n                    <br />\n                    Feels like: {currentWeather.main.feels_like}째C\n                  </p>\n                  <p>\n                    Temp: {currentWeather.main.temp}째C\n                    <br />\n                    Min Temp: {currentWeather.main.temp_min}째C\n                    <br />\n                    Max Temp: {currentWeather.main.temp_max}째C\n                  </p>\n                  <p>\n                    Pressure: {currentWeather.main.pressure}hPa\n                    <br />\n                    Humidity: {currentWeather.main.humidity}%\n                    <br />\n                    Visibility: {currentWeather.visibility}m\n                  </p>\n                </div>\n              )}\n            </p>\n          </div>\n          <ThemeSelect setTheme={setTheme} />\n        </div>\n      </div>\n      <div className='map-container'>\n        <div className='card bordered'>\n          <Map\n            theme={theme}\n            viewport={viewport}\n            marker={marker}\n            setViewport={setViewport}\n            setMarker={setMarker}\n            setCurrentWeather={setCurrentWeather}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default App;\n","D:\\Codes\\React\\weather-neo-pwa\\src\\components\\Map.jsx",["40"],"D:\\Codes\\React\\weather-neo-pwa\\src\\components\\ThemeSelect.jsx",[],"D:\\Codes\\React\\weather-neo-pwa\\src\\components\\Search.jsx",[],"D:\\Codes\\React\\weather-neo-pwa\\src\\api\\fetchWeather.js",["41"],"import axios from 'axios';\r\n\r\nconst weatherAPIKey = 'e4e40b8ea4e6a131dddcdadd76d89036';\r\n\r\nconst fetchWeather = async (type, data) => {\r\n  try {\r\n    switch (type) {\r\n      case 'COORDS': {\r\n        const { lat, lan } = data;\r\n        let res = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lan}&appid=${weatherAPIKey}&units=metric`\r\n        );\r\n        return res.data;\r\n      }\r\n      case 'CITY_NAME': {\r\n        const { city_name } = data;\r\n        let res = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city_name}&appid=${weatherAPIKey}&units=metric`\r\n        );\r\n        return res.data;\r\n      }\r\n      default:\r\n        throw { message: 'This is an error' };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default fetchWeather;\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":49,"column":6,"nodeType":"48","endLine":49,"endColumn":8,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":21,"column":6,"nodeType":"48","endLine":21,"endColumn":30,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":23,"column":9,"nodeType":"54","messageId":"55","endLine":23,"endColumn":47},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyLocation'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has a missing dependency: 'setCurrentWeather'. Either include it or remove the dependency array.",["59"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [getMyLocation]",{"range":"64","text":"65"},"Update the dependencies array to be: [marker.lat, marker.lan, setCurrentWeather]",{"range":"66","text":"67"},[1211,1213],"[getMyLocation]",[805,829],"[marker.lat, marker.lan, setCurrentWeather]"]